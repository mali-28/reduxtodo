{"ast":null,"code":"const initialData = {\n  list: []\n};\n\nconst todoReduce = (state = initialData, action) => {\n  switch (action.type) {\n    case 'Add-Todo':\n      const {\n        id,\n        data,\n        toggle,\n        newid\n      } = action.payload;\n\n      if (toggle && data) {\n        return { ...state,\n          list: [...state.list, {\n            id: id,\n            data: data\n          }]\n        };\n      } else if (!toggle) {\n        console.log(newid); // return {...state, list : [...state.list, state.list.map((elem) =>{\n        //     if(elem.id === newid){\n        //     return {data : elem.data}  \n        //         }\n        // }\n        // )]}\n\n        state.list.filter(elem => {\n          if (elem.id === newid) {\n            console.log(data);\n            return { ...state,\n              list: { ...state.list,\n                data: data\n              }\n            };\n          }\n        });\n      } else {\n        return {\n          list: [...state.list]\n        };\n      }\n\n    case 'remove-Todo':\n      const newList = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newList\n      };\n\n    case 'remove-List':\n      return { ...state,\n        list: []\n      };\n\n    case 'Edit-Todo':\n      let index = action.index;\n      const editItem = state.list.find(elem => {\n        return elem.id === index;\n      });\n      return { ...state,\n        newId: editItem.id\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReduce;","map":{"version":3,"sources":["E:/reactJs/reduxTodo/src/reduces/todoReducer.js"],"names":["initialData","list","todoReduce","state","action","type","id","data","toggle","newid","payload","console","log","filter","elem","newList","index","editItem","find","newId"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAG;AADS,CAApB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAuBI,MAAvB,KAAiC;AACjD,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAK,UAAL;AAEI,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA,IAAL;AAAWC,QAAAA,MAAX;AAAmBC,QAAAA;AAAnB,UAA4BL,MAAM,CAACM,OAAzC;;AACA,UAAGF,MAAM,IAAID,IAAb,EAAkB;AACd,eAAM,EAAC,GAAGJ,KAAJ;AAAUF,UAAAA,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAe;AAAEK,YAAAA,EAAE,EAAGA,EAAP;AAAWC,YAAAA,IAAI,EAAGA;AAAlB,WAAf;AAAjB,SAAN;AACH,OAFD,MAEM,IAAI,CAACC,MAAL,EAAY;AACdG,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EADc,CAEd;AACA;AACA;AACA;AACA;AACA;;AACAN,QAAAA,KAAK,CAACF,IAAN,CAAWY,MAAX,CAAmBC,IAAD,IAAS;AACvB,cAAGA,IAAI,CAACR,EAAL,KAAYG,KAAf,EAAqB;AACjBE,YAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACJ,mBAAO,EAAC,GAAGJ,KAAJ;AAAWF,cAAAA,IAAI,EAAG,EAAC,GAAGE,KAAK,CAACF,IAAV;AAAgBM,gBAAAA,IAAI,EAAGA;AAAvB;AAAlB,aAAP;AAEC;AACJ,SAND;AASH,OAjBK,MAiBD;AAAE,eAAO;AAACN,UAAAA,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV;AAAR,SAAP;AAAiC;;AAM5C,SAAK,aAAL;AACA,YAAMc,OAAO,GAAGZ,KAAK,CAACF,IAAN,CAAWY,MAAX,CAAmBC,IAAD,IAAWA,IAAI,CAACR,EAAL,KAAYF,MAAM,CAACE,EAAhD,CAAhB;AACA,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAGc;AAFL,OAAN;;AAKA,SAAK,aAAL;AACI,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,IAAI,EAAG;AAFJ,OAAP;;AAIJ,SAAK,WAAL;AAEI,UAAIe,KAAK,GAAGZ,MAAM,CAACY,KAAnB;AACA,YAAMC,QAAQ,GAAGd,KAAK,CAACF,IAAN,CAAWiB,IAAX,CAAiBJ,IAAD,IAAQ;AAAE,eAAOA,IAAI,CAACR,EAAL,KAAYU,KAAnB;AAAyB,OAAnD,CAAjB;AAGC,aAAM,EACF,GAAGb,KADD;AAEFgB,QAAAA,KAAK,EAAGF,QAAQ,CAACX;AAFf,OAAN;;AAML;AAAU,aAAOH,KAAP;AAtDX;AAwDF,CAzDD;;AA0DA,eAAeD,UAAf","sourcesContent":["const initialData = {\r\n    list : []\r\n};\r\n\r\nconst todoReduce = (state = initialData , action) =>{\r\n   switch (action.type){\r\n       \r\n    case 'Add-Todo':\r\n\r\n        const {id, data, toggle, newid} = action.payload;    \r\n        if(toggle && data){\r\n            return{...state,list : [...state.list,{ id : id, data : data,} ]}\r\n        }else if (!toggle){\r\n            console.log(newid);\r\n            // return {...state, list : [...state.list, state.list.map((elem) =>{\r\n            //     if(elem.id === newid){\r\n            //     return {data : elem.data}  \r\n            //         }\r\n            // }\r\n            // )]}\r\n            state.list.filter((elem) =>{\r\n                if(elem.id === newid){\r\n                    console.log(data)\r\n                return {...state, list : {...state.list, data : data}  \r\n                    }\r\n                }\r\n            })\r\n            \r\n            \r\n        }else{ return {list : [...state.list]};}\r\n        \r\n\r\n        \r\n        \r\n    \r\n    case 'remove-Todo' : \r\n    const newList = state.list.filter((elem) =>  elem.id !== action.id );\r\n    return{\r\n        ...state,\r\n        list : newList,\r\n        };\r\n\r\n    case 'remove-List':\r\n        return {\r\n            ...state,\r\n            list : []} \r\n           \r\n    case 'Edit-Todo':\r\n\r\n        let index = action.index;\r\n        const editItem = state.list.find((elem)=>{ return elem.id === index});\r\n         \r\n         \r\n         return{\r\n             ...state,\r\n             newId : editItem.id,\r\n    }\r\n       \r\n                 \r\n    default : return state\r\n   }\r\n}\r\nexport default todoReduce;"]},"metadata":{},"sourceType":"module"}