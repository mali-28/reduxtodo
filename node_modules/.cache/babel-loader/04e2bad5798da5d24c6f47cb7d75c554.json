{"ast":null,"code":"const initialData = {\n  list: []\n};\n\nconst todoReduce = (state = initialData, action) => {\n  switch (action.type) {\n    case 'Add-Todo':\n      const {\n        id,\n        data\n      } = action.payload;\n\n      if (!data) {\n        return {\n          list: [...state.list]\n        };\n      } else {\n        return { ...state,\n          list: [...state.list, {\n            id: id,\n            data: data\n          }]\n        };\n      }\n\n      ;\n\n    case 'remove-Todo':\n      const newList = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newList\n      };\n\n    case 'remove-List':\n      return { ...state,\n        list: []\n      };\n\n    case 'Edit-Todo':\n      const {\n        indx,\n        input\n      } = action.payload;\n      const editItem = state.list.find(elem => {\n        return elem.id === indx;\n      });\n      console.log(editItem);\n      input = editItem.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReduce;","map":{"version":3,"sources":["E:/reactJs/reduxTodo/src/reduces/todoReducer.js"],"names":["initialData","list","todoReduce","state","action","type","id","data","payload","newList","filter","elem","indx","input","editItem","find","console","log"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAG;AADS,CAApB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAuBI,MAAvB,KAAiC;AACjD,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAK,UAAL;AAEI,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,UAAaH,MAAM,CAACI,OAA1B;;AAEA,UAAG,CAACD,IAAJ,EAAS;AACN,eAAQ;AAACN,UAAAA,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV;AAAR,SAAR;AACF,OAFD,MAEM;AAAC,eAAM,EAAC,GAAGE,KAAJ;AAAUF,UAAAA,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAe;AAAEK,YAAAA,EAAE,EAAGA,EAAP;AAAWC,YAAAA,IAAI,EAAGA;AAAlB,WAAf;AAAjB,SAAN;AAAkE;;AAAA;;AAE7E,SAAK,aAAL;AACA,YAAME,OAAO,GAAGN,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAmBC,IAAD,IAAWA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAAhD,CAAhB;AACA,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAGQ;AAFL,OAAN;;AAKA,SAAK,aAAL;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,IAAI,EAAG;AAFJ,OAAP;;AAIJ,SAAK,WAAL;AAEI,YAAM;AAACW,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBT,MAAM,CAACI,OAA7B;AACC,YAAMM,QAAQ,GAAGX,KAAK,CAACF,IAAN,CAAWc,IAAX,CAAiBJ,IAAD,IAAQ;AAAE,eAAOA,IAAI,CAACL,EAAL,KAAYM,IAAnB;AAAwB,OAAlD,CAAjB;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAD,MAAAA,KAAK,GAAGC,QAAQ,CAACP,IAAjB;;AAEL;AAAU,aAAOJ,KAAP;AA9BX;AAgCF,CAjCD;;AAkCA,eAAeD,UAAf","sourcesContent":["const initialData = {\r\n    list : []\r\n};\r\n\r\nconst todoReduce = (state = initialData , action) =>{\r\n   switch (action.type){\r\n       \r\n    case 'Add-Todo':\r\n\r\n        const {id, data} = action.payload;    \r\n        \r\n        if(!data){\r\n           return  {list : [...state.list]};\r\n        }else {return{...state,list : [...state.list,{ id : id, data : data,} ]}}; \r\n    \r\n    case 'remove-Todo' : \r\n    const newList = state.list.filter((elem) =>  elem.id !== action.id );\r\n    return{\r\n        ...state,\r\n        list : newList\r\n        };\r\n\r\n    case 'remove-List':\r\n        return {\r\n            ...state,\r\n            list : []} \r\n           \r\n    case 'Edit-Todo':\r\n\r\n        const {indx, input} = action.payload;\r\n         const editItem = state.list.find((elem)=>{ return elem.id === indx});\r\n         \r\n         console.log(editItem)\r\n         input = editItem.data;\r\n\r\n    default : return state\r\n   }\r\n}\r\nexport default todoReduce;"]},"metadata":{},"sourceType":"module"}