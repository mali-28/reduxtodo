{"ast":null,"code":"const initialData = {\n  list: []\n};\n\nconst todoReduce = (state = initialData, action) => {\n  switch (action.type) {\n    case 'Add-Todo':\n      const {\n        id,\n        data,\n        toggle,\n        newid\n      } = action.payload;\n      console.log(newid);\n\n      if (toggle) {\n        if (!data) {\n          return {\n            list: [...state.list]\n          };\n        } else {\n          return { ...state,\n            list: [...state.list, {\n              id: id,\n              data: data\n            }]\n          };\n        }\n\n        ;\n      } else {}\n\n    case 'remove-Todo':\n      const newList = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newList\n      };\n\n    case 'remove-List':\n      return { ...state,\n        list: []\n      };\n\n    case 'Edit-Todo':\n      let index = action.index;\n      const editItem = state.list.find(elem => {\n        return elem.id === index;\n      }); //  console.log(editItem.data)\n\n      return { ...state,\n        newId: editItem.id,\n        newInput: editItem.data\n      };\n    //  return inputData : setInput(newInput)  ;\n    //  console.log(index, input)\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReduce;","map":{"version":3,"sources":["E:/reactJs/reduxTodo/src/reduces/todoReducer.js"],"names":["initialData","list","todoReduce","state","action","type","id","data","toggle","newid","payload","console","log","newList","filter","elem","index","editItem","find","newId","newInput"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAG;AADS,CAApB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAuBI,MAAvB,KAAiC;AACjD,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAK,UAAL;AAEI,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA,IAAL;AAAWC,QAAAA,MAAX;AAAmBC,QAAAA;AAAnB,UAA4BL,MAAM,CAACM,OAAzC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAGD,MAAH,EAAU;AACN,YAAG,CAACD,IAAJ,EAAS;AACT,iBAAQ;AAACN,YAAAA,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV;AAAR,WAAR;AACF,SAFE,MAEG;AAAC,iBAAM,EAAC,GAAGE,KAAJ;AAAUF,YAAAA,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAe;AAAEK,cAAAA,EAAE,EAAGA,EAAP;AAAWC,cAAAA,IAAI,EAAGA;AAAlB,aAAf;AAAjB,WAAN;AAAkE;;AAAA;AACzE,OAJD,MAIK,CAEJ;;AAGL,SAAK,aAAL;AACA,YAAMM,OAAO,GAAGV,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAmBC,IAAD,IAAWA,IAAI,CAACT,EAAL,KAAYF,MAAM,CAACE,EAAhD,CAAhB;AACA,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAGY;AAFL,OAAN;;AAKA,SAAK,aAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,IAAI,EAAG;AAFJ,OAAP;;AAIJ,SAAK,WAAL;AAEI,UAAIe,KAAK,GAAGZ,MAAM,CAACY,KAAnB;AACA,YAAMC,QAAQ,GAAGd,KAAK,CAACF,IAAN,CAAWiB,IAAX,CAAiBH,IAAD,IAAQ;AAAE,eAAOA,IAAI,CAACT,EAAL,KAAYU,KAAnB;AAAyB,OAAnD,CAAjB,CAHJ,CAKI;;AAEC,aAAM,EACF,GAAGb,KADD;AAEFgB,QAAAA,KAAK,EAAGF,QAAQ,CAACX,EAFf;AAGFc,QAAAA,QAAQ,EAAGH,QAAQ,CAACV;AAHlB,OAAN;AAID;AACA;;AAEJ;AAAU,aAAOJ,KAAP;AAzCX;AA2CF,CA5CD;;AA6CA,eAAeD,UAAf","sourcesContent":["const initialData = {\r\n    list : []\r\n};\r\n\r\nconst todoReduce = (state = initialData , action) =>{\r\n   switch (action.type){\r\n       \r\n    case 'Add-Todo':\r\n\r\n        const {id, data, toggle, newid} = action.payload; \r\n        console.log(newid)   \r\n        if(toggle){\r\n            if(!data){\r\n            return  {list : [...state.list]};\r\n         }else {return{...state,list : [...state.list,{ id : id, data : data,} ]}};\r\n        }else{\r\n\r\n        }\r\n        \r\n    \r\n    case 'remove-Todo' : \r\n    const newList = state.list.filter((elem) =>  elem.id !== action.id );\r\n    return{\r\n        ...state,\r\n        list : newList,\r\n        };\r\n\r\n    case 'remove-List':\r\n        return {\r\n            ...state,\r\n            list : []} \r\n           \r\n    case 'Edit-Todo':\r\n\r\n        let index = action.index;\r\n        const editItem = state.list.find((elem)=>{ return elem.id === index});\r\n         \r\n        //  console.log(editItem.data)\r\n         \r\n         return{\r\n             ...state,\r\n             newId : editItem.id,\r\n             newInput : editItem.data,}\r\n        //  return inputData : setInput(newInput)  ;\r\n        //  console.log(index, input)\r\n                 \r\n    default : return state\r\n   }\r\n}\r\nexport default todoReduce;"]},"metadata":{},"sourceType":"module"}